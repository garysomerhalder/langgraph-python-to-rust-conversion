[package]
name = "langgraph-rust"
version = "0.1.0"
edition = "2021"
authors = ["Gary Somerhalder"]
description = "A Rust implementation of LangGraph for building stateful, multi-agent applications"
repository = "https://github.com/terragon/langgraph-rust"
license = "MIT OR Apache-2.0"
keywords = ["langgraph", "graph", "agents", "state-machine", "workflow"]
categories = ["data-structures", "algorithms", "development-tools"]

[lib]
name = "langgraph"
path = "src/lib.rs"

[dependencies]
# Graph processing - using latest versions
petgraph = "0.6"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
anyhow = "1.0"

# Async runtime for agent execution
tokio = { version = "1.42", features = ["full"] }
async-trait = "0.1"
futures = "0.3"

# Logging and observability
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# For state management
dashmap = "6.1"
arc-swap = "1.7"
parking_lot = "0.12"

# For execution engine
uuid = { version = "1.11", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }

# For streaming
tokio-stream = "0.1"
bincode = "1.3"
bytes = "1.5"

# For resilience patterns
rand = "0.8"

# For performance optimizations
string_cache = "0.8"
smallvec = { version = "1.13", features = ["serde"] }
wide = "0.7"  # SIMD operations for performance

# For validation
regex = "1.10"

# For metrics
prometheus = "0.13"
lazy_static = "1.5"

# For PostgreSQL persistence
sqlx = { version = "0.8", features = ["runtime-tokio", "postgres", "json", "chrono", "uuid"] }

# For Redis persistence
redis = { version = "0.27", features = ["tokio-comp", "connection-manager"] }

# For S3 persistence
aws-sdk-s3 = "1.62"
aws-config = "1.5"
aws-types = "1.3"
flate2 = "1.0"

# For distributed state synchronization (simplified for YELLOW phase)
# etcd-rs = "1.0"  # Will add in GREEN phase
# raft = "0.7"     # Will add in GREEN phase

[dev-dependencies]
criterion = "0.5"
proptest = "1.6"
tokio-test = "0.4"
pretty_assertions = "1.4"

[[example]]
name = "simple_workflow"
path = "examples/simple_workflow.rs"

[[example]]
name = "conditional_routing"
path = "examples/conditional_routing.rs"

[[example]]
name = "multi_agent"
path = "examples/multi_agent.rs"

[[example]]
name = "state_management"
path = "examples/state_management.rs"

[[bench]]
name = "graph_benchmark"
harness = false

[[bench]]
name = "comprehensive_benchmark"
harness = false

[profile.release]
opt-level = 3
lto = true
codegen-units = 1

[profile.dev]
opt-level = 0
debug = true